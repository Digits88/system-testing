---
- name: initial start of ethereum go client, connection to bootstrapping node
  docker: 
      image:    "{{ g_docker_image['go'] }}"
      name:     "{{ dbg_container_id }}_go"     
      expose:   ["8080", "30303"]
      ports:    ["20000:30203", "30000:30303"] 
      
      # parameters given to client 
      command: -loglevel=5 -seednode={{ groups['tag_Name_boot'][0] }}:30303 -maxpeer={{ dbg_req_num_peers }}
  tags:
    - go

- name: initial start of ethereum python client, connection to bootstrapping node
  docker: 
      image:    "{{ g_docker_image['python'] }}"
      name:     "{{ dbg_container_id }}_python"     
      expose:   ["30203", "30303"]
      ports:    ["22000:30203", "32000:30303"] 
      
      # parameters given to client 
      command: --logging :debug --log_json 1 --remote {{ groups['tag_Name_boot'][0] }} --port 30303 --mining {{ dbg_mining_cpu_percentage }} --peers {{ dbg_req_num_peers }}
  tags:
    - python

- name: Log docker output to elarch
  # fire and forget, don't wait to finish, run for one day
  async: 86400
  poll: 0
  # again, ansible docker module does not support logs
  # pyethereum wrongly logs to stderr
  shell: docker logs --follow=true {{ dbg_container_id }} 2>&1 | {{ repo_path }}/logging/teees.py {{ groups['tag_Name_elarch'][0]}}
  register: log_runner

- name: verify previous task
  async_status: jid={{ log_runner.ansible_job_id }}
