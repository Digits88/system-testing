---
# this will only work when missing parameters are injected into the inventory file.

- name: Stop docker log forwarding
  # there is no Ansible API to stop async tasks, unfortunately.
  # when run through ansible, needs --oldest option, as otherwise the ansible pgreg runner is also matched
  shell: pkill --parent $(pgrep --full --oldest "docker logs.*{{ docker_container_base_string ~ '_' ~ item[0] ~ '_' ~ item[1] }}.*teees")
  # pkill gives -15 return code, don't know why. Ignore it
  failed_when: false 
  with_nested:
    - target_client_impl
    - target_client_no
  tags:
    - go
    - cpp
    - python

- name: Stop client docker instances
  # ansible docker does not support stop by container name, only by image name. Stupid.
  shell: docker stop {{ docker_container_base_string ~ '_' ~ item[0] ~ '_' ~ item[1] }} 
  ignore_errors: true  
  with_nested:
    - target_client_impl
    - target_client_no
  tags:
    - go
    - cpp
    - python

# TODO: This only works with the first container of each implementation, needs more work images
- name: Persist state of stopped go client
  # ansible docker module does not support this ...
  shell: docker commit {{ docker_container_base_string ~ '_' ~ item[0] ~ '_000' }} {{ g_docker_work_image[item[0]] }}
  ignore_errors: true  
  with_nested:
    - target_client_impl
    - target_client_no
  tags:
    - go
    - cpp
    - python

- name: rm unused go container
  # ansible docker module does not support this ...
  shell: docker rm {{ docker_container_base_string ~ '_' ~ item[0] ~ '_' ~ item[1] }} 
  ignore_errors: true  
  with_nested:
    - target_client_impl
    - target_client_no
  tags:
    - go
    - cpp
    - python
