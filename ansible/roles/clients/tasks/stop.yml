---
# this will only work when missing parameters are injected into the inventory file.
# TODO do all in a loop

- name: Stop go client docker instances
  # ansible docker does not support stop by container name, only by image name. Stupid.
  shell: docker stop {{ docker_container_id['go'] }} 
  ignore_errors: true  
  tags:
    - go

- name: Persist state of stopped go client
  # ansible docker module does not support this ...
  shell: docker commit {{ docker_container_id['go'] }} {{ g_docker_image['go'] }}
  ignore_errors: true  
  tags:
    - go

- name: Stop go docker log forwarding
  # there is no Ansible API to stop async tasks, unfortunately.
  shell: pkill --parent $(pgrep --full "docker logs.*{{ docker_container_id['go'] }}.*teees")
  # pkill gives -15 return code, don't know why. Ignore it
  failed_when: false 
  tags:
    - go

- name: Stop python client docker instances
  # ansible docker does not support stop by container name, only by image name. Stupid.
  shell: docker stop {{ docker_container_id['python'] }} 
  ignore_errors: true  
  tags:
    - python

- name: Persist state of stopped python client
  # ansible docker module does not support this ...
  shell: docker commit {{ docker_container_id['python'] }} {{ g_docker_image['python'] }}
  ignore_errors: true  
  tags:
    - python

- name: Stop python docker log forwarding
  # there is no Ansible API to stop async tasks, unfortunately.
  shell: pkill --parent $(pgrep --full "docker logs.*{{ docker_container_id['python'] }}.*teees")
  # pkill gives -15 return code, don't know why. Ignore it
  failed_when: false 
  tags:
    - python
